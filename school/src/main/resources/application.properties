server.port=${PORT:2019}
# server.servlet.context-path=/apis

# Which db to run
#local.run.db=H2
local.run.db=POSTGRESQL

# Environment Variables Needed for PostgreSQL database
# MYDBHOST
# MYDBNAME
# MYDBUSER
# MYDBPASSWORD

# Environment Variables Needed for OAuth2 Authentication Server
# OAUTHCLIENTID
# OAUTHCLIENTSECRET
# Find heroku info
# heroku config -a samirlilienfeld-schoolapp
# postgres://rrwzjxlkniayov:83e8dc9dc5a3c3a30e40dde8fb62941da11030b3953709f5c8f808690e776c71@ec2-54-243-241-62.compute-1.amazonaws.com:5432/d7bl8dlv2l83jj
# postgres://bzhxqmxdgwigkw:611e5353ffd763b09aed8fad07d243e9bbf44e13f8f542330e3b862a1df47c92@ec2-54-221-243-211.compute-1.amazonaws.com:5432/d1blvk8nmshe0v
#postgres://xqpeivuuyijqsa:e1530636898e95a28da7ef82a4a2ac1bb73cb6c31af481dba7e7c403a38508c4@ec2-107-21-102-221.compute-1.amazonaws.com:5432/d2ksai1d0ij687
# posgress://username     :password                                                        @url                                       :5432/dbname

# Begin h2 configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true
# End h2 configuration

# What do with the schema
# drop n create table again, good for testing
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always

# Good for production!
# spring.jpa.hibernate.ddl-auto=update
# spring.datasource.initialization-mode=never

# Should we use createBlob from java.sql.connection. PostgreSQL requires it to be true.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Feature that determines what happens when no accessors are found for a type
# (and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.fail-on-empty-beans=false

# Turns off Spring Boot automatic exception handling
server.error.whitelabel.enabled=false

# needed for actuators to work
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true

# Shows the generated and custom SQL but does hurt performance and the logs get full fast
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true

# keeps a transaction inside of the same entity manager
# This property register an EntityManager to the current thread,
# so you will have the same EntityManager until the web request is finished.
spring.jpa.open-in-view=true




#server.port=${PORT:2019}
#
##Feature that determines what happens when no accessors are found for a type
##(and there are no annotations to indicate it is meant to be serialized).
#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#
##drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.initialization-mode=always
#
## For h2 database
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#
#
## For PostgreSQL
##spring.datasource.url=jdbc:postgresql://localhost:5432/ourcourses
##spring.datasource.username=postgres
##spring.datasource.password=${MYDBPASSWORD:password}
##spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#
#


